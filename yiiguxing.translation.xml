<application>
  <component name="AppStorage">
    <option name="lastLanguages">
      <language-pair target="CHINESE" />
    </option>
    <histories>
      <item value="stash" />
      <item value="joinnable" />
      <item value="joinable" />
      <item value="下一级" />
      <item value="挖掘" />
      <item value="Retrieval" />
      <item value="分词器" />
      <item value="分瓷器" />
      <item value="// The append built-in function appends elements to the end of a slice. If&#10;// it has sufficient capacity, the destination is resliced to accommodate the&#10;// new elements. If it does not, a new underlying array will be allocated.&#10;// Append returns the updated slice. It is therefore necessary to store the&#10;// result of append, often in the variable holding the slice itself:&#10;//&#9;slice = append(slice, elem1, elem2)&#10;//&#9;slice = append(slice, anotherSlice...)&#10;// As a special case, it is legal to append a string to a byte slice, like this:&#10;//&#9;slice = append([]byte(&quot;hello &quot;), &quot;world&quot;...)" />
      <item value="剩下的" />
      <item value="Comodification" />
      <item value="/** * The number of times this list has been &lt;i&gt;structurally modified&lt;/i&gt;. * Structural modifications are those that change the size of the * list, or otherwise perturb it in such a fashion that iterations in * progress may yield incorrect results. * * &lt;p&gt;This field is used by the iterator and list iterator implementation * returned by the {@code iterator} and {@code listIterator} methods. * If the value of this field changes unexpectedly, the iterator (or list * iterator) will throw a {@code ConcurrentModificationException} in * response to the {@code next}, {@code remove}, {@code previous}, * {@code set} or {@code add} operations. This provides * &lt;i&gt;fail-fast&lt;/i&gt; behavior, rather than non-deterministic behavior in * the face of concurrent modification during iteration. * * &lt;p&gt;&lt;b&gt;Use of this field by subclasses is optional.&lt;/b&gt; If a subclass * wishes to provide fail-fast iterators (and list iterators), then it * merely has to increment this field in its {@code add(int, E)} and * {@code remove(int)} methods (and any other methods that it overrides * that result in structural modifications to the list). A single call to * {@code add(int, E)} or {@code remove(int)} must add no more than * one to this field, or the iterators (and list iterators) will throw * bogus {@code ConcurrentModificationExceptions}. If an implementation * does not wish to provide fail-fast iterators, this field may be * ignored. */" />
      <item value="* The number of times this list has been &lt;i&gt;structurally modified&lt;/i&gt;. * Structural modifications are those that change the size of the * list, or otherwise perturb it in such a fashion that iterations in * progress may yield incorrect results. * * &lt;p&gt;This field is used by the iterator and list iterator implementation * returned by the {@code iterator} and {@code listIterator} methods. * If the value of this field changes unexpectedly, the iterator (or list * iterator) will throw a {@code ConcurrentModificationException} in * response to the {@code next}, {@code remove}, {@code previous}, * {@code set} or {@code add} operations. This provides * &lt;i&gt;fail-fast&lt;/i&gt; behavior, rather than non-deterministic behavior in * the face of concurrent modification during iteration. * * &lt;p&gt;&lt;b&gt;Use of this field by subclasses is optional.&lt;/b&gt; If a subclass * wishes to provide fail-fast iterators (and list iterators), then it * merely has to increment this field in its {@code add(int, E)} and * {@code remove(int)} methods (and any other methods that it overrides * that result in structural modifications to the list). A single call to * {@code add(int, E)} or {@code remove(int)} must add no more than * one to this field, or the iterators (and list iterators) will throw * bogus {@code ConcurrentModificationExceptions}. If an implementation * does not wish to provide fail-fast iterators, this field may be * ignored." />
      <item value="and after the element * that would be returned by {@link #previous}, if any." />
      <item value="* The element is inserted immediately before the element that * would be returned by {@link #next}, if any," />
      <item value="* Inserts the specified element into the list (optional operation). * The element is inserted immediately before the element that * would be returned by {@link #next}, if any, and after the element * that would be returned by {@link #previous}, if any." />
      <item value="toggle" />
      <item value="structure" />
      <item value="punct" />
      <item value="繁体字" />
      <item value="inject" />
      <item value="l" />
      <item value="按键" />
      <item value="serve" />
      <item value="searv" />
      <item value="概要设计" />
      <item value="需求文档" />
      <item value="darkside" />
      <item value="排斥" />
      <item value="互斥" />
      <item value="组织" />
      <item value="chinacourt" />
      <item value="lawcourt" />
      <item value="court" />
      <item value="法规" />
      <item value="Code scaffolding" />
      <item value="HUB activated" />
      <item value="activated" />
      <item value="active" />
      <item value="actived" />
      <item value="activatied" />
      <item value="激活的" />
      <item value="顿号" />
      <item value="来源" />
      <item value="serv" />
      <item value="server" />
      <item value="* Creates an instance of {@code ReentrantLock} with the * given fairness policy. * * @param fair {@code true} if this lock should use a fair ordering policy" />
      <item value="character" />
      <item value="// RoleManager provides interface to define the operations for managing roles." />
      <item value="// Unless required by applicable law or agreed to in writing, software&#10;// distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;// See the License for the specific language governing permissions and&#10;// limitations under the License." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="70" />
        <entry key="ENGLISH" value="70" />
        <entry key="DANISH" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="SPANISH" value="1" />
      </map>
    </option>
  </component>
</application>